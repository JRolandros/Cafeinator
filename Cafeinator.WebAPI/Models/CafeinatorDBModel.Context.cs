//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cafeinator.WebAPI.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CafeinatorDBEntities : DbContext
    {
        public CafeinatorDBEntities()
            : base("name=CafeinatorDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<AddNewUser_Result> AddNewUser(string bcode, string usrName)
        {
            var bcodeParameter = bcode != null ?
                new ObjectParameter("bcode", bcode) :
                new ObjectParameter("bcode", typeof(string));
    
            var usrNameParameter = usrName != null ?
                new ObjectParameter("usrName", usrName) :
                new ObjectParameter("usrName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddNewUser_Result>("AddNewUser", bcodeParameter, usrNameParameter);
        }
    
        public virtual int DeleteMenu(Nullable<int> usrID)
        {
            var usrIDParameter = usrID.HasValue ?
                new ObjectParameter("usrID", usrID) :
                new ObjectParameter("usrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteMenu", usrIDParameter);
        }
    
        public virtual int DeleteUser(Nullable<int> usrID)
        {
            var usrIDParameter = usrID.HasValue ?
                new ObjectParameter("usrID", usrID) :
                new ObjectParameter("usrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUser", usrIDParameter);
        }
    
        public virtual ObjectResult<GetAllDrinkType_Result> GetAllDrinkType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllDrinkType_Result>("GetAllDrinkType");
        }
    
        public virtual ObjectResult<GetUser_Result> GetUser(string bcode)
        {
            var bcodeParameter = bcode != null ?
                new ObjectParameter("bcode", bcode) :
                new ObjectParameter("bcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUser_Result>("GetUser", bcodeParameter);
        }
    
        public virtual ObjectResult<GetUserLastChoice_Result> GetUserLastChoice(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserLastChoice_Result>("GetUserLastChoice", userIDParameter);
        }
    
        public virtual int SaveUserLastChoice(Nullable<int> userID, Nullable<int> drkID, Nullable<int> sugarQty)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var drkIDParameter = drkID.HasValue ?
                new ObjectParameter("drkID", drkID) :
                new ObjectParameter("drkID", typeof(int));
    
            var sugarQtyParameter = sugarQty.HasValue ?
                new ObjectParameter("sugarQty", sugarQty) :
                new ObjectParameter("sugarQty", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveUserLastChoice", userIDParameter, drkIDParameter, sugarQtyParameter);
        }
    }
}
